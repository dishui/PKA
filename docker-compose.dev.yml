services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg15
    container_name: pka_postgres
    environment:
      POSTGRES_DB: pka_db
      POSTGRES_USER: pka_user
      POSTGRES_PASSWORD: pka_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "0.0.0.0:5432:5432"
    networks:
      - pka_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pka_user -d pka_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pka_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "0.0.0.0:6379:6379"
    networks:
      - pka_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: pka_backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://pka_user:pka_password@postgres:5432/pka_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=true
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      # AI Service (optional - will work without Ollama)
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - BACKEND_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173
    volumes:
      - ./backend:/app
      - chroma_data:/app/chroma_db
    ports:
      - "0.0.0.0:8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pka_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  chroma_data:
    driver: local

networks:
  pka_network:
    driver: bridge
